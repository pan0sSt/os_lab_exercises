diff --git a/include/minix/callnr.h b/include/minix/callnr.h
index 6f145cf..86284a9 100644
--- a/include/minix/callnr.h
+++ b/include/minix/callnr.h
@@ -65,6 +65,8 @@
 #define SETGROUPS_O	  66
 #define GETMCONTEXT       67
 #define SETMCONTEXT       68
+#define EROTIMAC      69
+#define EROTIMAD      70
 
 /* Posix signal handling. */
 #define SIGACTION	  71
diff --git a/kernel/system/do_fork.c b/kernel/system/do_fork.c
index f309270..a02b617 100644
--- a/kernel/system/do_fork.c
+++ b/kernel/system/do_fork.c
@@ -122,7 +122,7 @@ int do_fork(struct proc * caller, message * m_ptr)
   rpc->p_seg.p_ttbr = 0;
   rpc->p_seg.p_ttbr_v = NULL;
 #endif
-
+  printf("process forked\n");
   return OK;
 }
 
diff --git a/servers/pm/Makefile b/servers/pm/Makefile
index 9065432..5decb23 100644
--- a/servers/pm/Makefile
+++ b/servers/pm/Makefile
@@ -4,7 +4,7 @@
 PROG=	pm
 SRCS=	main.c forkexit.c break.c exec.c time.c alarm.c \
 	signal.c utility.c table.c getset.c misc.c \
-	profile.c schedule.c
+	profile.c schedule.c do_erotimac.c do_erotimad.c
 
 .if ${USE_MCONTEXT} != "no"
 SRCS+= mcontext.c
diff --git a/servers/pm/do_erotimac.c b/servers/pm/do_erotimac.c
new file mode 100644
index 0000000..b600256
--- /dev/null
+++ b/servers/pm/do_erotimac.c
@@ -0,0 +1,16 @@
+#include "pm.h"
+#include "mproc.h"
+
+int do_erotimac(){
+	clock_t user_t=0;
+	clock_t system_t=0;
+	printf("processes -> %d\n",procs_in_use);
+	for (int i=0; i<NR_PROCS; i++)
+	{
+		user_t=mproc[i].mp_child_utime+user_t;
+		system_t=mproc[i].mp_child_stime+system_t;
+	}
+	printf("user time -> %d\n", (int)user_t);
+	printf("system time -> %d\n", (int)system_t);
+	return 0;
+}
diff --git a/servers/pm/do_erotimad.c b/servers/pm/do_erotimad.c
new file mode 100644
index 0000000..43652ab
--- /dev/null
+++ b/servers/pm/do_erotimad.c
@@ -0,0 +1,10 @@
+#include "pm.h"
+#include "mproc.h"
+
+int do_erotimad(int par){
+	for(int i=0; i<NR_PROCS; i++)
+	{
+		if(mproc[i].mp_pid==par) return 1;
+		else if(i==(NR_PROCS-1)) return 0;
+	}
+}
\ No newline at end of file
diff --git a/servers/pm/proto.h b/servers/pm/proto.h
index 00646d3..37164ae 100644
--- a/servers/pm/proto.h
+++ b/servers/pm/proto.h
@@ -56,6 +56,8 @@ int do_getepinfo(void);
 int do_getepinfo_o(void);
 int do_svrctl(void);
 int do_getsetpriority(void);
+int do_erotimac(void);
+int do_erotimad(int par);
 
 /* schedule.c */
 void sched_init(void);
diff --git a/servers/pm/table.c b/servers/pm/table.c
index 5051cec..e57fd50 100644
--- a/servers/pm/table.c
+++ b/servers/pm/table.c
@@ -80,8 +80,8 @@ int (*call_vec[])(void) = {
 	do_set, 	/* 66 = setgroups */
 	do_getmcontext,	/* 67 = getmcontext */
 	do_setmcontext,	/* 68 = setmcontext */
-	no_sys,		/* 69 = unused	*/
-	no_sys,		/* 70 = unused	*/
+	do_erotimac,		/* 69 = erotimac	*/
+	do_erotimad,		/* 70 = erotimad	*/
 	do_sigaction,	/* 71 = sigaction   */
 	do_sigsuspend,	/* 72 = sigsuspend  */
 	do_sigpending,	/* 73 = sigpending  */
diff --git a/servers/vfs/open.c b/servers/vfs/open.c
index fc72695..72f350f 100644
--- a/servers/vfs/open.c
+++ b/servers/vfs/open.c
@@ -607,7 +607,12 @@ int do_mkdir()
   } else if ((r = forbidden(fp, vp, W_BIT|X_BIT)) == OK) {
 	r = req_mkdir(vp->v_fs_e, vp->v_inode_nr, fullpath, fp->fp_effuid,
 		      fp->fp_effgid, bits);
+			  
+	printf("newdir: %s %o\n",fullpath, dirmode);
   }
+  
+  
+ 
 
   unlock_vnode(vp);
   unlock_vmnt(vmp);
